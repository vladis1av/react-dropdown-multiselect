{"version":3,"sources":["components/Dropdown/Dropdown.module.css","components/Dropdown/DropdownItem/DropdownItem.module.css","components/Dropdown/SelectedItem/SelectedItem.module.css","components/Layout/Layout.module.css","assets/svg/svg-sprite.svg","components/Icon/index.tsx","components/Dropdown/DropdownItem/index.tsx","components/Dropdown/SelectedItem/index.tsx","components/Dropdown/index.tsx","components/Layout/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Icon","name","color","width","height","className","fill","stroke","xlinkHref","IconsSVG","DropdownItem","item","toggleSelect","isSelected","showIcon","DropdownItemStyle","label","onMouseUp","iconLang","icon","lang","checked","checkbox","type","checkboxCustom","SelectedItem","title","itemId","removeSelection","SelectItemStyle","select","selectIcon","onClick","Dropdown","items","multiSelect","useState","open","setOpen","selection","setSelection","inputValue","setInputValue","console","log","openToggle","filteredSelections","filter","current","id","some","prevState","DropdownStyle","dropdownWrapper","dropdownTitle","dropdown","length","selectionList","map","selectionListTitle","dropdownListInputIconArrow","dropdownListInputIconArrowRotate","dropdownList","dropdownListInputWrapper","dropdownListInputIconSearch","dropdownListInput","placeholder","value","onChange","e","target","onChangeInput","trim","toLocaleLowerCase","includes","Layout","children","LayoutStyle","wrapper","content","App","setMultiSelect","setShowIcon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.296e2585.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__30Ixc\",\"dropdownTitle\":\"Dropdown_dropdownTitle__2EYJd\",\"selectionList\":\"Dropdown_selectionList__2Bp8n\",\"selectionListTitle\":\"Dropdown_selectionListTitle__1D2qa\",\"dropdownList\":\"Dropdown_dropdownList__3uf24\",\"dropdownListInputWrapper\":\"Dropdown_dropdownListInputWrapper__wV3wh\",\"dropdownListInput\":\"Dropdown_dropdownListInput__3ATpk\",\"dropdownListInputIconSearch\":\"Dropdown_dropdownListInputIconSearch__2CVLz\",\"dropdownListInputIconArrow\":\"Dropdown_dropdownListInputIconArrow__1WLhj\",\"dropdownListInputIconArrowRotate\":\"Dropdown_dropdownListInputIconArrowRotate__KdQoj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DropdownItem_item__28qnZ\",\"label\":\"DropdownItem_label__XvcHk\",\"iconLang\":\"DropdownItem_iconLang__ZAW1l\",\"checkbox\":\"DropdownItem_checkbox__3aC5-\",\"checkboxCustom\":\"DropdownItem_checkboxCustom__19pxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SelectedItem_select__2wlz6\",\"selectIcon\":\"SelectedItem_selectIcon__rZ1X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__26edy\",\"content\":\"Layout_content__1t0I4\"};","export default __webpack_public_path__ + \"static/media/svg-sprite.1a0544cc.svg\";","import IconsSVG from '../../assets/svg/svg-sprite.svg';\r\n\r\ninterface IconProps {\r\n  name: string;\r\n  width: number | string;\r\n  height: number | string;\r\n  color?: string;\r\n  className?: string;\r\n}\r\n\r\nconst Icon: React.FC<IconProps> = ({\r\n  name,\r\n  color,\r\n  width,\r\n  height,\r\n  className,\r\n}) => {\r\n  return (\r\n    <svg\r\n      className={`${className}`}\r\n      fill={color}\r\n      stroke={color}\r\n      width={width}\r\n      height={height}>\r\n      <use xlinkHref={`${IconsSVG}#${name}`} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nimport { IItem } from '../../../interfaces/Item';\r\nimport Icon from '../../Icon';\r\nimport DropdownItemStyle from './DropdownItem.module.css';\r\n\r\ninterface DropdownItemProps {\r\n  item: IItem;\r\n  showIcon?: boolean;\r\n  toggleSelect: (item: IItem) => void;\r\n  isSelected: (item: IItem) => boolean;\r\n}\r\n\r\nconst DropdownItem: React.FC<DropdownItemProps> = ({\r\n  item,\r\n  toggleSelect,\r\n  isSelected,\r\n  showIcon,\r\n}) => {\r\n  return (\r\n    <div className={DropdownItemStyle.item}>\r\n      <label\r\n        className={DropdownItemStyle.label}\r\n        onMouseUp={() => toggleSelect(item)}>\r\n        {showIcon && (\r\n          <div className={DropdownItemStyle.iconLang}>\r\n            <Icon name={item.icon} width=\"22\" height=\"22\" />\r\n          </div>\r\n        )}\r\n        <span>{item.lang}</span>\r\n        <input\r\n          checked={isSelected(item)}\r\n          className={DropdownItemStyle.checkbox}\r\n          type=\"checkbox\"\r\n        />\r\n        <span className={DropdownItemStyle.checkboxCustom}></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownItem;\r\n","import React from 'react';\r\nimport Icon from '../../Icon';\r\n\r\nimport SelectItemStyle from './SelectedItem.module.css';\r\n\r\ninterface SelectedItemProps {\r\n  title: string;\r\n  itemId: number;\r\n  removeSelection: (item: number) => void;\r\n}\r\n\r\nconst SelectedItem: React.FC<SelectedItemProps> = ({\r\n  title,\r\n  itemId,\r\n  removeSelection,\r\n}) => {\r\n  return (\r\n    <div className={SelectItemStyle.select}>\r\n      <span>{title}</span>\r\n      <div\r\n        className={SelectItemStyle.selectIcon}\r\n        onClick={() => removeSelection(itemId)}>\r\n        <Icon name=\"cancel\" width=\"7.5\" height=\"7.5\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedItem;\r\n","import React, { useState } from 'react';\r\n\r\nimport { IItem } from '../../interfaces/Item';\r\nimport Icon from '../Icon';\r\nimport DropdownItem from './DropdownItem';\r\nimport SelectedItem from './SelectedItem';\r\nimport DropdownStyle from './Dropdown.module.css';\r\n\r\ninterface DropdownProps {\r\n  items: Array<IItem>;\r\n  multiSelect?: boolean;\r\n  showIcon?: boolean;\r\n}\r\n\r\nconst Dropdown: React.FC<DropdownProps> = ({\r\n  items,\r\n  multiSelect = false,\r\n  showIcon = true,\r\n}) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [selection, setSelection] = useState<IItem[]>([]);\r\n  const [inputValue, setInputValue] = useState<string>('');\r\n\r\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  console.log(inputValue);\r\n\r\n  const openToggle = (): void => setOpen(!open);\r\n\r\n  const removeSelection = (itemId: number): void => {\r\n    const filteredSelections = [...selection].filter(\r\n      (current) => current.id !== itemId,\r\n    );\r\n    setSelection([...filteredSelections]);\r\n  };\r\n\r\n  function toggleSelect(item: IItem) {\r\n    if (!selection.some((current) => current.id === item.id)) {\r\n      if (!multiSelect) {\r\n        setSelection([item]);\r\n      } else if (multiSelect) {\r\n        setSelection((prevState) => [...prevState, item]);\r\n      }\r\n    } else {\r\n      removeSelection(item.id);\r\n    }\r\n  }\r\n\r\n  const isSelected = (item: IItem): boolean => {\r\n    console.log(selection.some((current) => current.id === item.id));\r\n\r\n    return selection.some((current) => current.id === item.id);\r\n  };\r\n\r\n  return (\r\n    <div className={DropdownStyle.dropdownWrapper}>\r\n      <span className={DropdownStyle.dropdownTitle}>Язык</span>\r\n      <div\r\n        className={DropdownStyle.dropdown}\r\n        onClick={() => !selection.length && openToggle()}>\r\n        <div className={DropdownStyle.selectionList}>\r\n          {selection.length ? (\r\n            selection.map((item) => (\r\n              <SelectedItem\r\n                key={item.id}\r\n                title={item.lang}\r\n                itemId={item.id}\r\n                removeSelection={removeSelection}\r\n              />\r\n            ))\r\n          ) : (\r\n            <span className={DropdownStyle.selectionListTitle}>\r\n              Выберите язык из списка\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={DropdownStyle.dropdownListInputIconArrow}\r\n          onClick={openToggle}>\r\n          <Icon\r\n            className={\r\n              !open ? DropdownStyle.dropdownListInputIconArrowRotate : ''\r\n            }\r\n            name=\"arrow\"\r\n            width=\"11\"\r\n            height=\"6\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {open && (\r\n        <div className={DropdownStyle.dropdownList}>\r\n          <div className={DropdownStyle.dropdownListInputWrapper}>\r\n            <Icon\r\n              className={DropdownStyle.dropdownListInputIconSearch}\r\n              name=\"search\"\r\n              width=\"18\"\r\n              height=\"18\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className={DropdownStyle.dropdownListInput}\r\n              placeholder=\"Поиск\"\r\n              value={inputValue}\r\n              onChange={(e) => onChangeInput(e)}\r\n            />\r\n          </div>\r\n          {items\r\n            .filter((value) => {\r\n              if (!inputValue.trim()) {\r\n                return value;\r\n              } else if (\r\n                value.lang\r\n                  .toLocaleLowerCase()\r\n                  .includes(inputValue.toLocaleLowerCase())\r\n              ) {\r\n                return value;\r\n              }\r\n            })\r\n            .map((item) => (\r\n              <DropdownItem\r\n                key={item.id}\r\n                item={item}\r\n                toggleSelect={toggleSelect}\r\n                isSelected={isSelected}\r\n                showIcon={showIcon}\r\n              />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from 'react';\r\n\r\nimport LayoutStyle from './Layout.module.css';\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className={LayoutStyle.wrapper}>\r\n      <div className={LayoutStyle.content}>{children}</div>;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useState } from 'react';\n\nimport Dropdown from './components/Dropdown';\nimport Layout from './components/Layout';\n\nconst items = [\n  {\n    lang: 'Русский',\n    icon: 'ru',\n    id: 1,\n  },\n  {\n    lang: 'Английский',\n    icon: 'en',\n    id: 2,\n  },\n  {\n    lang: 'Испанский',\n    icon: 'es',\n    id: 3,\n  },\n  {\n    lang: 'Немецкий',\n    icon: 'de',\n    id: 4,\n  },\n  {\n    lang: 'Итальянский',\n    icon: 'it',\n    id: 5,\n  },\n  {\n    lang: 'Польский',\n    icon: 'pl',\n    id: 6,\n  },\n];\n\nfunction App() {\n  // единственная ошибка в том что у меня не контролируемые чекбоксы\n  //для демки чтоб в онлайне удобней было проверять\n  const [multiSelect, setMultiSelect] = useState<boolean>(false);\n  const [showIcon, setShowIcon] = useState<boolean>(true);\n\n  return (\n    <div className=\"app\">\n      <Layout>\n        <div className=\"demo-block\">\n          <button\n            className=\"btn mr20\"\n            onClick={() => setMultiSelect(!multiSelect)}>\n            {multiSelect ? 'Выключить Multi-Select' : 'Включить Multi-Select'}\n          </button>\n          <button className=\"btn\" onClick={() => setShowIcon(!showIcon)}>\n            {showIcon ? 'Скрыть иконки' : 'Показать иконки'}\n          </button>\n        </div>\n\n        <Dropdown items={items} multiSelect={multiSelect} showIcon={showIcon} />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}